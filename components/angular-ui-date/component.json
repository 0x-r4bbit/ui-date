{
  "name": "angular-ui-date",
  "version": "0.0.2",
  "description": "This directive allows you to add a date-picker to your form elements.",
  "author": {
    "name": "https://github.com/angular-ui/ui-date/graphs/contributors"
  },
  "license": "MIT",
  "homepage": "http://angular-ui.github.com",
  "main": "./ui-date.js",
  "ignore": [
    "**/.*",
    "node_modules",
    "components",
    "test*",
    "demo*",
    "gruntFile.js",
    "package.json"
  ],
  "dependencies": {
    "angular": "~1.x",
    "jquery-ui": ">= 1.9"
  },
  "devDependencies": {
    "angular-mocks": "~1.x"
  },
  "gitHead": "f7dcac8378b3298d1280ff7ab6121646c76ad509",
  "readme": "# ui-date directive [![Build Status](https://travis-ci.org/angular-ui/ui-date.png)](https://travis-ci.org/angular-ui/ui-date)\r\n\r\nThis directive allows you to add a date-picker to your form elements.\r\n\r\n# Requirements\r\n\r\n- AngularJS\r\n- JQuery\r\n- JQueryUI\r\n- [Date.toISOString()](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/toISOString) (requires [polyfill](https://github.com/kriskowal/es5-shim/) for &le;IE8)\r\n\r\n# Testing\r\n\r\nWe use testacular and jshint to ensure the quality of the code.  The easiest way to run these checks is to use grunt:\r\n\r\n  npm install -g grunt-cli\r\n  npm install\r\n  bower install\r\n  grunt\r\n\r\nThe testacular task will try to open Chrome as a browser in which to run the tests.  Make sure this is available or change the configuration in `test\\test.config.js` \r\n\r\n# Usage\r\n\r\nWe use [bower](http://twitter.github.com/bower/) for dependency management.  Add\r\n\r\n    dependencies: {\r\n        \"angular-ui-date\": \"latest\"\r\n    }\r\n\r\nTo your `components.json` file. Then run\r\n\r\n    bower install\r\n\r\nThis will copy the ui-date files into your `components` folder, along with its dependencies. Load the script files in your application:\r\n\r\n    <script type=\"text/javascript\" src=\"components/jquery/jquery.js\"></script>\r\n    <script type=\"text/javascript\" src=\"components/jquery-ui\\ui\\jquery-ui.custom.js\"></script>\r\n    <script type=\"text/javascript\" src=\"components/angular/angular.js\"></script>\r\n    <script type=\"text/javascript\" src=\"components/angular-ui-date/date.js\"></script>\r\n\r\nAdd the date module as a dependency to your application module:\r\n\r\n    var myAppModule = angular.module('MyApp', ['ui.date'])\r\n\r\nApply the directive to your form elements:\r\n\r\n    <input ui-date>\r\n\r\n## Options\r\n\r\nAll the jQueryUI DatePicker options can be passed through the directive.\r\n\r\n\tmyAppModule.controller('MyController', function($scope) {\r\n\t\t$scope.dateOptions = {\r\n\t\t\tchangeYear: true,\r\n\t\t\tchangeMonth: true,\r\n\t\t\tyearRange: '1900:-0'\r\n\t\t};\r\n\t});\r\n\r\n    <input ui-date=\"dateOptions\" name=\"DateOfBirth\">\r\n\r\n## Static Inline Picker\r\n\r\nIf you want a static picker then simply apply the directive to a div rather than an input element.\r\n\r\n    <div ui-date=\"dateOptions\" name=\"DateOfBirth\"></div>\r\n\r\n## Working with ng-model\r\n\r\nThe ui-date directive plays nicely with ng-model and validation directives such as ng-required.\r\n\r\nIf you add the ng-model directive to same the element as ui-date then the picked date is automatically synchronized with the model value.\r\n\r\n_The ui-date directive stores and expects the model value to be a standard javascript Date object._\r\n\r\n## ui-date-format directive\r\nThe ui-date directive only works with Date objects.\r\nIf you want to pass date strings to and from the date directive via ng-model then you must use the ui-date-format directive.\r\nThis directive specifies the format of the date string that will be expected in the ng-model.\r\nThe format string syntax is that defined by the JQueryUI Date picker. For example\r\n\r\n    <input ui-date ui-date-format=\"DD, d MM, yy\" ng-model=\"myDate\">\r\n\r\nNow you can set myDate in the controller.\r\n\r\n    $scope.myDate = \"Thursday, 11 October, 2012\";\r\n\r\n## ng-required directive\r\n\r\nIf you apply the required directive to element then the form element is invalid until a date is picked.\r\n\r\nNote: Remember that the ng-required directive must be explictly set, i.e. to \"true\".  This is especially true on divs:\r\n\r\n    <div ui-date=\"dateOptions\" name=\"DateOfBirth\" ng-required=\"true\"></div>\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "angular-ui-date@0.0.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/angular-ui/ui-date.git"
  }
}